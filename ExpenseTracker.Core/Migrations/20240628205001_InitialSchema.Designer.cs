// <auto-generated />
using System;
using ExpenseTracker.Core.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTracker.Core.Migrations
{
    [DbContext(typeof(ExpenseTrackerDbContext))]
    [Migration("20240628205001_InitialSchema")]
    partial class InitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTracker.Core.Entities.CreditCard", b =>
                {
                    b.Property<int>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditCardId"));

                    b.Property<string>("CardLastFourDigit")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreditCardName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CreditCardId")
                        .HasName("PK_CreditCard_CreditCardId");

                    b.HasIndex("UserId");

                    b.ToTable("CreditCard", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<int?>("CreditCardId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpenseAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ExpenseCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ExpenseTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExpenseId")
                        .HasName("PK_Expense_ExpenseId");

                    b.HasIndex("CreditCardId");

                    b.HasIndex("ExpenseCategoryId");

                    b.HasIndex("ExpenseTypeId");

                    b.HasIndex(new[] { "UserId" }, "IDX_Expense_UserId");

                    b.ToTable("Expense", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.ExpenseCategory", b =>
                {
                    b.Property<int>("ExpenseCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseCategoryId"));

                    b.Property<string>("ExpenseCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExpenseCategoryId")
                        .HasName("PK_ExpenseCategory_ExpenseCategoryId");

                    b.ToTable("ExpenseCategory", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.ExpenseType", b =>
                {
                    b.Property<int>("ExpenseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseTypeId"));

                    b.Property<string>("ExpenseTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExpenseTypeId")
                        .HasName("PK_ExpenseType_ExpenseTypeId");

                    b.ToTable("ExpenseType", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamilyId"));

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FamilyId")
                        .HasName("PK_Family_FamilyId");

                    b.ToTable("Family", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AdObjId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("Guest");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK_UserProfile_UserId");

                    b.HasIndex(new[] { "FamilyId" }, "IDX_Expense_FamilyId");

                    b.ToTable("UserProfile", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.CreditCard", b =>
                {
                    b.HasOne("ExpenseTracker.Core.Entities.UserProfile", "User")
                        .WithMany("CreditCards")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CreditCard_UserProfile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.Expense", b =>
                {
                    b.HasOne("ExpenseTracker.Core.Entities.CreditCard", "CreditCard")
                        .WithMany("Expenses")
                        .HasForeignKey("CreditCardId")
                        .HasConstraintName("FK_Expense_CreditCard");

                    b.HasOne("ExpenseTracker.Core.Entities.ExpenseCategory", "ExpenseCategory")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseCategoryId")
                        .HasConstraintName("FK_Expense_Category");

                    b.HasOne("ExpenseTracker.Core.Entities.ExpenseType", "ExpenseType")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseTypeId")
                        .HasConstraintName("FK_Expense_Type");

                    b.HasOne("ExpenseTracker.Core.Entities.UserProfile", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Expense_User");

                    b.Navigation("CreditCard");

                    b.Navigation("ExpenseCategory");

                    b.Navigation("ExpenseType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.UserProfile", b =>
                {
                    b.HasOne("ExpenseTracker.Core.Entities.Family", "Family")
                        .WithMany("UserProfiles")
                        .HasForeignKey("FamilyId")
                        .HasConstraintName("FK_UserProfile_Family");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.CreditCard", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.ExpenseCategory", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.ExpenseType", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.Family", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("ExpenseTracker.Core.Entities.UserProfile", b =>
                {
                    b.Navigation("CreditCards");

                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
